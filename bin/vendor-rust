#!/bin/bash

# Packaging script for Rust:
# create vendor tarball
# for the related source.

# remove previous artifact, if any
destdir="/tmp"
target="vendor.tar.xz"
if [[ -f "$target" ]]; then
	rm $target
fi

# target specific archive
file="$1"

if [[ -z "$file" ]]; then
	project=$(basename "$PWD")
	file=$(ls ./*"${project}"*tar*)
	echo "Inferred $file as target"
fi

# apply patches (if any)
rpmdir="$PWD"
patches=$(ls ./*.patch)
foldername=$(tar --exclude="*/*" -tf "$file")

cp "$file" "$destdir"

# traverse into source dir
pushd "$destdir"

tar xf "$file"
pushd "$foldername"

# apply patches
for p in $patches; do
	patch -p1 < "$rpmdir/$p"
done

CARGO_NET_GIT_FETCH_WITH_CLI=true cargo vendor

time tar -cf - vendor/ |  xz -9 -c - > "$target"

# get back to project dir
popd
popd

tarball="$destdir/$foldername/$target"

ls -lh "$tarball"

echo -n "Copying ..."
cp "$tarball" .
echo -n "done"

