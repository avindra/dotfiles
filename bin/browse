#!/usr/bin/env -S deno run --allow-run
import { exec } from "https://deno.land/x/exec/mod.ts";

/**
 * A port of "powersearch" 0.2 to Deno.
 *
 * Version History:
 * -----------------------------------------------
 * | 0.1.0 |  6/26/2021 | * Initial import based on
 * |       |            |   powersearch 0.2 rework
 * |       |            | * change to unsafe by default
 *
 * @see https://dra.vin/#/bookmarklets
 */

const t = prompt("Where you off to?");
let unsafe = true;
const tri = function(o) {
	return new RegExp("^" + o, "i").test(t)
}

let trim = t.replace(/--\S+/g, "").replace(/^\s*\S+\s*/, "");

const  gs = "http://google.com/search?q=";
const get = function(t) {
	const i = ["images", "news", "maps"][t];
	let e = "http://" + i + ".google.com/" + i;
	const isBing = 3 == t;
	isBing && (e = "https://images.bing.com/");
	let g = "?q=";
	if (unsafe) {
		g = g.replace(/q=/, (isBing ? "safesearch=off" : "safe=images") + "&q=");
	}
	goto(e, g + trim);
};

const goto = async function(e = "http://www.", t = trim) {
	const executor = unsafe ? `firefox -private-window` : "xdg-open";
	const line = `${executor} "${e + t}"`;
	console.log("running", line);
	await exec(line);
};

const e = t.match(/--\S+/g) || [];
for (let i = 0; i < e.length; i++) switch (e[i]) {
	// TBD: plumb context from the page
	case "--this":
		trim += " site:" + document.domain;
		continue;
	case "--safe":
		unsafe = false;
		continue
}

if (tri("gi")) {
	get(0);
} else if(tri("gn")) {
	get(1);
} else if (tri("gm")) {
	get(2);
} else if(tri("bi")) {
	get(3);
} else if(tri("gs")) {
	goto("https://google.com/search?q=");
} else if( tri("slang")) {
	goto("https://urbandictionary.com/define.php?term=")
} else if(tri("yt")) {
	goto("https://youtube.com/results?search_query=")
} else if(tri("wiki")) {
	goto("https://google.com/search?btnI&q=site:wikipedia.org ");
} else if(tri("imdb")) {
	goto("https://google.com/search?btnI&q=imdb ")
} else if(tri("(first|lucky)")) {
	goto("https://google.com/search?btnI&q=");
} else if( tri("ebook")) {
	goto(gs + encodeURIComponent('-inurl:htm -inurl:html intitle:index of("/ebooks"|"/book") (chm|pdf|zip) Last Modified '));
} else if(tri("music")) {
	goto(gs + encodeURIComponent("intitle:index.of last modified  parent directory (mp4|m4a|mp3|wma|ogg) -htm -html -php -asp "));
} else if(tri("torrents?")) {
	goto("https://www.thepiratebay.org/search/", trim + "/0/7/0");
}

