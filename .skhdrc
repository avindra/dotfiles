# KWM -> ChunkWM -> Yabai -> ?
# This was originally for khd, now called shkd

# swap managed window
shift + alt - h : yabai -m window --swap north

# move managed window
shift + cmd - h : yabai -m window --warp east

# balance size of windows
shift + alt - 0 : yabai -m space --balance

# make floating window fill screen
shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
shift + cmd - n : yabai -m space --create && \
                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                   yabai -m window --space "${index}" && \
                   yabai -m space --focus "${index}"


# focus monitor
# ctrl + alt - z  : yabai -m display --focus prev
# ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
# ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next
# ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1

# move floating window
shift + ctrl - a : yabai -m window --move rel:-20:0
shift + ctrl - s : yabai -m window --move rel:0:20


# set insertion point in focused container
ctrl + alt - h : yabai -m window --insert west

# toggle window zoom
alt - d : yabai -m window --toggle zoom-parent
alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window split type
alt - e : yabai -m window --toggle split

# float / unfloat window and center on screen
alt - t : yabai -m window --toggle float;\
#           yabai -m window --grid 4:4:1:1:2:2

# toggle sticky(+float), topmost, picture-in-picture
alt - p : yabai -m window --toggle sticky;\
          yabai -m window --toggle topmost;\
          yabai -m window --toggle pip

# Reload skhd config
cmd + shift - r : skhd --reload

# Set window focus (vim bindings)
cmd - h : yabai -m window --focus west
cmd - h             : yabai -m window --focus west
cmd - j             : yabai -m window --focus south
cmd - k             : yabai -m window --focus north
cmd - l             : yabai -m window --focus east

# Arrow bindings (used for space focus)
cmd - left             : yabai -m space --focus prev
cmd - right            : yabai -m space --focus next
# cmd - down             : yabai -m window --focus south
# cmd - up               : yabai -m window --focus north

# Set focused monitor
# cmd + shift - left   : chunkc -m monitor -f prev
# cmd + shift - right  : chunkc -m monitor -f next

# Switch back to previous workspace
# cmd - 0x32 : `id=$(chunkc get _last_active_desktop); khd -p "cmd - $id" &> /dev/null`
# cmd - tab         : `khd -p "ctrl - right" &> /dev/null`
# shift + cmd - tab : `khd -p "ctrl - left" &> /dev/null`

# Modes
cmd - e :  yabai -m window --toggle split

# Launch terminal
cmd - return : open -na /Applications/iTerm.app
cmd + shift - escape : /Users/agoolcharan/Dev/alacritty/target/release/alacritty -e htop
cmd - b : open -na /Applications/Google\ Chrome.app
cmd - d : open -na /Applications/Launchpad.app
cmd - x : /Users/agoolcharan/bin/lock

# Set Space Tiling Mode To BSP
cmd + alt + ctrl - b : yabai -m space --layout bsp

# Set Space Tiling Mode To Floating
cmd + alt + ctrl - m : yabai -m space --layout float

# fast focus desktop
# 0x32 = ~
cmd - 0x32 : yabai -m space --focus recent
cmd - 1 : yabai -m space --focus 1
cmd - 2 : yabai -m space --focus 2
cmd - 3 : yabai -m space --focus 3
cmd - 4 : yabai -m space --focus 4

# send window to desktop and follow focus
shift + cmd - 1 : yabai -m window --space 1; yabai -m space --focus 1
shift + cmd - 2 : yabai -m window --space 2; yabai -m space --focus 2
shift + cmd - 3 : yabai -m window --space 3; yabai -m space --focus 3
shift + cmd - 4 : yabai -m window --space 4; yabai -m space --focus 4


# vim:set filetype=sh:
